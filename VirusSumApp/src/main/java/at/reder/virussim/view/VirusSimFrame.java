package at.reder.virussim.view;

import at.reder.virussim.helper.VariationElement;
import at.reder.virussim.listener.PlaygroundChangedListener;
import at.reder.virussim.model.Host.HealthStatus;
import at.reder.virussim.model.Playground;
import at.reder.virussim.model.Statistics;
import at.reder.virussim.model.Virus;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author alex
 */
public class VirusSimFrame extends JFrame implements PlaygroundChangedListener {

    private static final Logger LOGGER = LoggerFactory.getLogger(VirusSimFrame.class);
//    private Playground playground;
    private int timestamp;
    private PlaygroundComponent playgroundComponent;

    public VirusSimFrame() {
        this.timestamp = 0;
        initComponents();
        customInitComponents();
    }

    public void setPlayground(Playground playground) {
        if (this.playgroundComponent.getPlayground() != null) {
            this.playgroundComponent.getPlayground().removePlaygroundChangedListener(this);
        }
        playground.addPlaygroundChangeListener(this);
        this.playgroundComponent.setPlayground(playground);
        this.timestamp = 0;
        playground.timeChanged(this.timestamp);
    }

    @Override
    public void playgroundChanged(Playground playground, Statistics statistics) {
        this.playgroundPanel.repaint();
        this.timestampTextfield.setText(Integer.toString(statistics.getTimestamp()));
        int healthHosts = statistics.getHostStatus().get(HealthStatus.HEALTHY) != null ? statistics.getHostStatus().get(HealthStatus.HEALTHY) : 0;
        int infectedHosts = statistics.getHostStatus().get(HealthStatus.INFECTED) != null ? statistics.getHostStatus().get(HealthStatus.INFECTED) : 0;
        int sikHosts = statistics.getHostStatus().get(HealthStatus.TRIGGERED) != null ? statistics.getHostStatus().get(HealthStatus.TRIGGERED) : 0;
        int immuneHosts = statistics.getHostStatus().get(HealthStatus.IMMUNE) != null ? statistics.getHostStatus().get(HealthStatus.IMMUNE) : 0;
        this.totalHostsText.setText(Integer.toString(statistics.getTotalHosts()));
        this.healthyHostsText.setText(Integer.toString(healthHosts));
        this.infectedHostsText.setText(Integer.toString(infectedHosts));
        this.sikHostsText.setText(Integer.toString(sikHosts));
        this.immuneHostsText.setText(Integer.toString(immuneHosts));
    }

    private void customInitComponents() {
        this.playgroundComponent = new PlaygroundComponent();
        this.playgroundPanel.add(this.playgroundComponent);
        this.nextTimestampButton.setMnemonic(KeyEvent.VK_ENTER);
        pack();
    }

    private Virus initVirus() {
        Virus virus = new Virus();
        update(virus);

        return virus;
    }

    private void update(Virus virus) {
        virus.setInfectionRadius((int) this.infectionRadiusSpinner.getValue());
        virus.setInfectionProbability((float) this.infectionProbabilitySpinner.getValue());
        virus.setTriggerPeriod(new VariationElement((int) this.triggertimeSpinner.getValue(), (float) this.triggertimeVariationSpinner.getValue()));
        virus.setHealingPeriod(new VariationElement((int) this.healingtimeSpinner.getValue(), (float) this.healingtimeVariationSpinner.getValue()));
        virus.setImmunityPeriod(new VariationElement((int) this.immunitytimeSpinner.getValue(), (float) this.immunitytimeVariationSpinner.getValue()));
    }

    /**
     * This method is called from within the constructor to initialize the
     * form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configPanel = new javax.swing.JPanel();
        timestampLabel = new javax.swing.JLabel();
        nextTimestampButton = new javax.swing.JButton();
        timestampTextfield = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        totalHostLabel = new javax.swing.JLabel();
        totalHostsText = new javax.swing.JTextField();
        healthyHostsLabel = new javax.swing.JLabel();
        healthyHostsText = new javax.swing.JTextField();
        infectedHostsLabel = new javax.swing.JLabel();
        infectedHostsText = new javax.swing.JTextField();
        sikHostsLabel = new javax.swing.JLabel();
        sikHostsText = new javax.swing.JTextField();
        immuneHostsLabel = new javax.swing.JLabel();
        immuneHostsText = new javax.swing.JTextField();
        infoPanel = new javax.swing.JPanel();
        propertiesPanel = new javax.swing.JPanel();
        playgroundLabel = new javax.swing.JLabel();
        dimensionLabel = new javax.swing.JLabel();
        xSpinner = new javax.swing.JSpinner();
        xLabel = new javax.swing.JLabel();
        ySpinner = new javax.swing.JSpinner();
        densityLabel = new javax.swing.JLabel();
        densitySpinner = new javax.swing.JSpinner();
        resetButton = new javax.swing.JButton();
        initialInfectedLabel = new javax.swing.JLabel();
        initialInfectedSpinner = new javax.swing.JSpinner();
        virusLabel = new javax.swing.JLabel();
        infectionLabel = new javax.swing.JLabel();
        infectionRadiusSpinner = new javax.swing.JSpinner();
        infectionProbabilitySpinner = new javax.swing.JSpinner();
        triggerLabel = new javax.swing.JLabel();
        triggertimeSpinner = new javax.swing.JSpinner();
        triggertimeVariationSpinner = new javax.swing.JSpinner();
        healingLabel = new javax.swing.JLabel();
        healingtimeSpinner = new javax.swing.JSpinner();
        healingtimeVariationSpinner = new javax.swing.JSpinner();
        jSeparator2 = new javax.swing.JSeparator();
        immunityLabel = new javax.swing.JLabel();
        immunitytimeSpinner = new javax.swing.JSpinner();
        immunitytimeVariationSpinner = new javax.swing.JSpinner();
        updateVirusButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        motionHabitsLabel = new javax.swing.JLabel();
        longLabel = new javax.swing.JLabel();
        longSlider = new javax.swing.JSlider();
        medLabel = new javax.swing.JLabel();
        medSlider = new javax.swing.JSlider();
        shortLabel = new javax.swing.JLabel();
        shortSlider = new javax.swing.JSlider();
        updateMotionHabitsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        playgroundPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("at/reder/virussim/view/Bundle"); // NOI18N
        setTitle(bundle.getString("VirusSimFrame.title")); // NOI18N

        timestampLabel.setText(bundle.getString("VirusSimFrame.timestampLabel.text")); // NOI18N

        nextTimestampButton.setText(bundle.getString("VirusSimFrame.nextTimestampButton.text")); // NOI18N
        nextTimestampButton.setFocusable(false);
        nextTimestampButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nextTimestampButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nextTimestampButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTimestampButtonActionPerformed(evt);
            }
        });

        timestampTextfield.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        timestampTextfield.setText(Integer.toString(this.timestamp));

        totalHostLabel.setText(bundle.getString("VirusSimFrame.totalHostLabel.text")); // NOI18N

        totalHostsText.setEditable(false);
        totalHostsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalHostsText.setText("0");
        totalHostsText.setToolTipText(bundle.getString("VirusSimFrame.totalHostsText.toolTipText")); // NOI18N

        healthyHostsLabel.setText(bundle.getString("VirusSimFrame.healthyHostsLabel.text")); // NOI18N

        healthyHostsText.setEditable(false);
        healthyHostsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        healthyHostsText.setText("0");

        infectedHostsLabel.setText(bundle.getString("VirusSimFrame.infectedHostsLabel.text")); // NOI18N

        infectedHostsText.setEditable(false);
        infectedHostsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        infectedHostsText.setText("0");

        sikHostsLabel.setText(bundle.getString("VirusSimFrame.sikHostsLabel.text")); // NOI18N

        sikHostsText.setEditable(false);
        sikHostsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        sikHostsText.setText("0");

        immuneHostsLabel.setText(bundle.getString("VirusSimFrame.immuneHostsLabel.text")); // NOI18N

        immuneHostsText.setEditable(false);
        immuneHostsText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        immuneHostsText.setText("0");

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(configPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(healthyHostsLabel)
                                    .addComponent(totalHostLabel))
                                .addGap(24, 24, 24)
                                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalHostsText)
                                    .addComponent(healthyHostsText)))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(infectedHostsLabel)
                                    .addComponent(sikHostsLabel)
                                    .addComponent(immuneHostsLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sikHostsText)
                                    .addComponent(infectedHostsText)
                                    .addComponent(immuneHostsText, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(nextTimestampButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(configPanelLayout.createSequentialGroup()
                                .addComponent(timestampLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timestampTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nextTimestampButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timestampLabel)
                    .addComponent(timestampTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalHostLabel)
                    .addComponent(totalHostsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthyHostsLabel)
                    .addComponent(healthyHostsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infectedHostsLabel)
                    .addComponent(infectedHostsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sikHostsLabel)
                    .addComponent(sikHostsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(immuneHostsLabel)
                    .addComponent(immuneHostsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(configPanel, java.awt.BorderLayout.LINE_START);
        getContentPane().add(infoPanel, java.awt.BorderLayout.PAGE_END);

        playgroundLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        playgroundLabel.setText(bundle.getString("VirusSimFrame.playgroundLabel.text")); // NOI18N

        dimensionLabel.setText(bundle.getString("VirusSimFrame.dimensionLabel.text")); // NOI18N

        xSpinner.setModel(new javax.swing.SpinnerNumberModel(1024, 0, null, 1));
        xSpinner.setValue(1024);

        xLabel.setText(bundle.getString("VirusSimFrame.xLabel.text")); // NOI18N

        ySpinner.setModel(new javax.swing.SpinnerNumberModel(768, 0, null, 1));

        densityLabel.setText(bundle.getString("VirusSimFrame.densityLabel.text")); // NOI18N

        densitySpinner.setModel(new javax.swing.SpinnerNumberModel(Float.valueOf(0.01f), Float.valueOf(0.0f), Float.valueOf(1.0f), Float.valueOf(0.005f)));

        resetButton.setText(bundle.getString("VirusSimFrame.resetButton.text")); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        initialInfectedLabel.setText(bundle.getString("VirusSimFrame.initialInfectedLabel.text")); // NOI18N

        initialInfectedSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        virusLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        virusLabel.setText(bundle.getString("VirusSimFrame.virusLabel.text")); // NOI18N

        infectionLabel.setText(bundle.getString("VirusSimFrame.infectionLabel.text")); // NOI18N

        infectionRadiusSpinner.setModel(new javax.swing.SpinnerNumberModel(10, 0, null, 1));

        infectionProbabilitySpinner.setModel(new javax.swing.SpinnerNumberModel(0.8f, null, 1.0f, 0.1f));

        triggerLabel.setText(bundle.getString("VirusSimFrame.triggerLabel.text")); // NOI18N

        triggertimeSpinner.setModel(new javax.swing.SpinnerNumberModel(5, 0, null, 1));

        triggertimeVariationSpinner.setModel(new javax.swing.SpinnerNumberModel(0.1f, 0.0f, null, 0.1f));

        healingLabel.setText(bundle.getString("VirusSimFrame.healingLabel.text")); // NOI18N

        healingtimeSpinner.setModel(new javax.swing.SpinnerNumberModel(14, 0, null, 1));

        healingtimeVariationSpinner.setModel(new javax.swing.SpinnerNumberModel(0.1f, 0.0f, null, 0.1f));

        immunityLabel.setText(bundle.getString("VirusSimFrame.immunityLabel.text")); // NOI18N

        immunitytimeSpinner.setModel(new javax.swing.SpinnerNumberModel(21, 0, null, 1));

        immunitytimeVariationSpinner.setModel(new javax.swing.SpinnerNumberModel(0.1f, 0.0f, null, 0.1f));

        updateVirusButton.setText(bundle.getString("VirusSimFrame.updateVirusButton.text")); // NOI18N
        updateVirusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVirusButtonActionPerformed(evt);
            }
        });

        motionHabitsLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        motionHabitsLabel.setText(bundle.getString("VirusSimFrame.motionHabitsLabel.text")); // NOI18N

        longLabel.setText(bundle.getString("VirusSimFrame.longLabel.text")); // NOI18N

        medLabel.setText(bundle.getString("VirusSimFrame.medLabel.text")); // NOI18N

        shortLabel.setText(bundle.getString("VirusSimFrame.shortLabel.text")); // NOI18N

        updateMotionHabitsButton.setText(bundle.getString("VirusSimFrame.updateMotionHabitsButton.text")); // NOI18N
        updateMotionHabitsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMotionHabitsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout propertiesPanelLayout = new javax.swing.GroupLayout(propertiesPanel);
        propertiesPanel.setLayout(propertiesPanelLayout);
        propertiesPanelLayout.setHorizontalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propertiesPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(shortSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(medSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(longSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, propertiesPanelLayout.createSequentialGroup()
                        .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dimensionLabel)
                            .addComponent(densityLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(xSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(xLabel)
                        .addGap(6, 6, 6)
                        .addComponent(ySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3)
                    .addGroup(propertiesPanelLayout.createSequentialGroup()
                        .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateMotionHabitsButton)
                            .addComponent(shortLabel)
                            .addComponent(medLabel)
                            .addComponent(longLabel)
                            .addComponent(motionHabitsLabel)
                            .addComponent(updateVirusButton)
                            .addComponent(virusLabel)
                            .addComponent(resetButton)
                            .addComponent(playgroundLabel)
                            .addGroup(propertiesPanelLayout.createSequentialGroup()
                                .addComponent(initialInfectedLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(densitySpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                    .addComponent(initialInfectedSpinner)))
                            .addGroup(propertiesPanelLayout.createSequentialGroup()
                                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(propertiesPanelLayout.createSequentialGroup()
                                        .addComponent(immunityLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(immunitytimeSpinner))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, propertiesPanelLayout.createSequentialGroup()
                                        .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(infectionLabel)
                                            .addComponent(triggerLabel)
                                            .addComponent(healingLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(infectionRadiusSpinner)
                                            .addComponent(triggertimeSpinner)
                                            .addComponent(healingtimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(infectionProbabilitySpinner)
                                    .addComponent(triggertimeVariationSpinner)
                                    .addComponent(healingtimeVariationSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                                    .addComponent(immunitytimeVariationSpinner))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        propertiesPanelLayout.setVerticalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propertiesPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(playgroundLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dimensionLabel)
                    .addComponent(xSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLabel)
                    .addComponent(ySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(densityLabel)
                    .addComponent(densitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(initialInfectedLabel)
                    .addComponent(initialInfectedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(virusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infectionLabel)
                    .addComponent(infectionRadiusSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infectionProbabilitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(triggertimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(triggertimeVariationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(triggerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healingtimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healingLabel)
                    .addComponent(healingtimeVariationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(immunitytimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(immunitytimeVariationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(immunityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateVirusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(motionHabitsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(longSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(medSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shortLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shortSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateMotionHabitsButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(propertiesPanel, java.awt.BorderLayout.LINE_END);

        jScrollPane1.setViewportView(playgroundPanel);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextTimestampButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTimestampButtonActionPerformed
        if (this.playgroundComponent.getPlayground() != null) {
            this.playgroundComponent.getPlayground().timeChanged(++this.timestamp);
        }
    }//GEN-LAST:event_nextTimestampButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        Playground playground = new Playground((int) this.xSpinner.getValue(), (int) this.ySpinner.getValue(), (float) this.densitySpinner.getValue(), (int) this.initialInfectedSpinner.getValue(), initVirus());
        setPlayground(playground);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void updateVirusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVirusButtonActionPerformed
        if (this.playgroundComponent.getPlayground() != null) {
            update(this.playgroundComponent.getPlayground().getVirus());
        }
    }//GEN-LAST:event_updateVirusButtonActionPerformed

    private void updateMotionHabitsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMotionHabitsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateMotionHabitsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel configPanel;
    private javax.swing.JLabel densityLabel;
    private javax.swing.JSpinner densitySpinner;
    private javax.swing.JLabel dimensionLabel;
    private javax.swing.JLabel healingLabel;
    private javax.swing.JSpinner healingtimeSpinner;
    private javax.swing.JSpinner healingtimeVariationSpinner;
    private javax.swing.JLabel healthyHostsLabel;
    private javax.swing.JTextField healthyHostsText;
    private javax.swing.JLabel immuneHostsLabel;
    private javax.swing.JTextField immuneHostsText;
    private javax.swing.JLabel immunityLabel;
    private javax.swing.JSpinner immunitytimeSpinner;
    private javax.swing.JSpinner immunitytimeVariationSpinner;
    private javax.swing.JLabel infectedHostsLabel;
    private javax.swing.JTextField infectedHostsText;
    private javax.swing.JLabel infectionLabel;
    private javax.swing.JSpinner infectionProbabilitySpinner;
    private javax.swing.JSpinner infectionRadiusSpinner;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel initialInfectedLabel;
    private javax.swing.JSpinner initialInfectedSpinner;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel longLabel;
    private javax.swing.JSlider longSlider;
    private javax.swing.JLabel medLabel;
    private javax.swing.JSlider medSlider;
    private javax.swing.JLabel motionHabitsLabel;
    private javax.swing.JButton nextTimestampButton;
    private javax.swing.JLabel playgroundLabel;
    private javax.swing.JPanel playgroundPanel;
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel shortLabel;
    private javax.swing.JSlider shortSlider;
    private javax.swing.JLabel sikHostsLabel;
    private javax.swing.JTextField sikHostsText;
    private javax.swing.JLabel timestampLabel;
    private javax.swing.JTextField timestampTextfield;
    private javax.swing.JLabel totalHostLabel;
    private javax.swing.JTextField totalHostsText;
    private javax.swing.JLabel triggerLabel;
    private javax.swing.JSpinner triggertimeSpinner;
    private javax.swing.JSpinner triggertimeVariationSpinner;
    private javax.swing.JButton updateMotionHabitsButton;
    private javax.swing.JButton updateVirusButton;
    private javax.swing.JLabel virusLabel;
    private javax.swing.JLabel xLabel;
    private javax.swing.JSpinner xSpinner;
    private javax.swing.JSpinner ySpinner;
    // End of variables declaration//GEN-END:variables
}
